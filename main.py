# Encrypted By Xmarty Ayush King
 # Github : GitHub.com/ayushking420
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))